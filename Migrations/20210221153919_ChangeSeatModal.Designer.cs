// <auto-generated />
using System;
using CinemaBookingSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CinemaBookingSystem.Migrations
{
    [DbContext(typeof(BookingSystemDbContext))]
    [Migration("20210221153919_ChangeSeatModal")]
    partial class ChangeSeatModal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("CinemaBookingSystem.Data.Models.MovieShow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("DescriptionLink")
                        .HasColumnType("TEXT");

                    b.Property<string>("Genre")
                        .HasColumnType("TEXT");

                    b.Property<string>("MovieName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PosterPath")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("SessionStart")
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("MovieShows");
                });

            modelBuilder.Entity("CinemaBookingSystem.Data.Models.MovieShowInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieShowId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MovieShowId")
                        .IsUnique();

                    b.ToTable("MovieShowInfos");
                });

            modelBuilder.Entity("CinemaBookingSystem.Data.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieShowId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Place")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Row")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MovieShowId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("CinemaBookingSystem.Data.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "user"
                        });
                });

            modelBuilder.Entity("CinemaBookingSystem.Data.Models.Seat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieShowInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Place")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Row")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MovieShowInfoId");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("CinemaBookingSystem.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@mail.ru",
                            Password = "123456",
                            RoleId = 1,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("CinemaBookingSystem.Data.Models.MovieShowInfo", b =>
                {
                    b.HasOne("CinemaBookingSystem.Data.Models.MovieShow", "MovieShow")
                        .WithOne("MovieShowInfo")
                        .HasForeignKey("CinemaBookingSystem.Data.Models.MovieShowInfo", "MovieShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MovieShow");
                });

            modelBuilder.Entity("CinemaBookingSystem.Data.Models.Reservation", b =>
                {
                    b.HasOne("CinemaBookingSystem.Data.Models.MovieShow", "MovieShow")
                        .WithMany("Reservations")
                        .HasForeignKey("MovieShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaBookingSystem.Data.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MovieShow");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CinemaBookingSystem.Data.Models.Seat", b =>
                {
                    b.HasOne("CinemaBookingSystem.Data.Models.MovieShowInfo", "MovieShowInfo")
                        .WithMany("Seats")
                        .HasForeignKey("MovieShowInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MovieShowInfo");
                });

            modelBuilder.Entity("CinemaBookingSystem.Data.Models.User", b =>
                {
                    b.HasOne("CinemaBookingSystem.Data.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CinemaBookingSystem.Data.Models.MovieShow", b =>
                {
                    b.Navigation("MovieShowInfo");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("CinemaBookingSystem.Data.Models.MovieShowInfo", b =>
                {
                    b.Navigation("Seats");
                });

            modelBuilder.Entity("CinemaBookingSystem.Data.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CinemaBookingSystem.Data.Models.User", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
